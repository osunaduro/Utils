' Gambas class file

Create Static

Export

'' ## Descripcion ##
'' 
'' Formatea una notacion a nmeros solamente para poder editarla
'' 
'' ## Parametros ##
'' 
'' - sText As String: Texto formateado
'' 
'' ## Retorno ##
'' 
'' - As String: Texto sin formato de notacion. Que representa un numero real.
Public Function FormatNull(sText As String) As String
  
  Dim Validos As String = "0123456789-.,"
  Dim iPos As Integer
  Dim sCaracter As String
  Dim ICantCaracter As Integer = Len(sText)
  Dim sTextFormateado As String
  
  If sText = MMain._Err Then
    Return "0"
  Else
  For iPos = 1 To ICantCaracter
    
    sCaracter = Mid(sText, iPos, 1)
    
    If InStr(Validos, sCaracter) <> 0 Then
      sTextFormateado &= sCaracter 'Replace(sText, sCaracter, "")
    Endif
    
  Next
  Endif
  
  
  Return Val(sTextFormateado) 
  
End


'' ## Descripcion ##
'' 
'' Funcion para formatear texto en notacion
'' 
'' ## Parametros ##
'' 
'' - sText As String: Texto a formatear
'' 
'' - sTipo As String: Constante String de la clase estatica Formats o cualquier tipo de abreviatura que 
'' quiera agregarle al numero.
''
'' ## Retorno ##
'' 
'' -  As String: Cadena formateada
'' 
'' ## Error ##
'' 
'' Si la cadena no representa un numero no puede formatearse
'' y se retorna un error
'' 
''   Const _Err As String = "#ERROR#"
Public Function FormatMedidas(sText As String, sTipo As String, Optional bDelante As Boolean = False) As String
  
  Dim sResultado As String
  
  sResultado = Format(sText, "-,0.00")
  
  If bDelante Then ''lo pone adelante
    Return sTipo & sResultado
  Else ''lo pone atras
    Return sResultado & " " & sTipo
  Endif
'------------------------si pasa un error
  Catch
    Return MMain._Err
    
End

'' ## Descripcion ##
'' 
'' Funcion para determinar si una cadena es una direccion de Email valido.
'' 
'' Debe ajustarce a las normas RFC 952 y a la RFC 1123 
'' 
'' ## Parametros ##
'' 
'' - sText As String: Cadena del tipo string la cual sera revisada y validada o no.
'' 
'' ## Retorno ##
'' 
'' - As Boolean: Valor boleano que representa la validez o no de la cadena
'' 
'' ## Autor ##
'' 
'' --------
'' ....Soplo....
'' -------
Public Function IsMail(sText As String) As Boolean
  
  Dim Partes As String[] = Split(sText, "@"), Usuario As String, dominio As String, valido As Boolean
  
  If Partes.max = 1 Then 'si está el signo @ presente una sola vez
    valido = True
  Endif 
  
  'dividido el email en componentes
  If valido Then 
    usuario = Partes[0]
    dominio = Partes[1]
  Endif
  
  
  'comprobar usuario
  valido = ComprobarUsuario(Usuario)
    
  'comprobar el dominio 
  If valido Then 
    valido = IsDominio(dominio)
  Endif 
  Return valido
End

'' ## Descripcion ##
'' 
'' Toma un valor string con formato monetario y
'' lo pasa a Float.
'' 
'' ## Parametros ##
'' 
'' - stxt As String: Texto a convertir
''    
'' ## Retorno ##
'' 
'' As Float: un valor Float
''    
'' ## Ejemplo ##
'' 
''   "-$ 10,22" -> -10,22
''  
'' ## Error ##
'' 
' '' Cuando no es una cadena valida para convertir devuelve 0
' Public Function FormatInt(stxt As String) As Float
'   
'   Dim sTxt2 As String
'   
'   '------------------------quita espacios y el simbolo $
'   sTxt2 = Replace(stxt, "$", "")
'   sTxt2 = Replace(sTxt2, " ", "")
'   '------------------------retorna el Valor
'   Return Val(sTxt2)  
'   '------------------------error
'   Catch
'     Return 0
' End

'' ## Descripcion ##
'' 
'' Formatea un string en formato monetario de argentina
'' porque asi me parecio cool
'' 
'' ## Parametros ##
'' 
'' - iTxt As String
''    
''      Texto a formatear. Deben ser caracteres qeu representan un numero
''      
'' ## Retorno ##
'' 
''  As String
''  
''      String con el formato  Format(iTxt, "-$####.##")
''      
'' ## Error ##
'' 
'' Se produce cuando un strin no es un arepresentacion de un numero por
'' ejemplo 100v.00 devuelve error.
' Public Function FormatMoney(iTxt As String) As String
'   
'   Dim sDat As String
'   
'   sDat = Format(iTxt, "-$,0.00")
'   'sDat = Format(iTxt, "$,#.###")
'   Return sDat
'   
'   Catch
'     
'     Return MMain._Err ' & iTxt
'   
' End

'' ## Descripcion ##
'' 
'' Funcion para determinar si una cadena es un dominio de internet valido
'' 
'' Debe ajustarce a las normas RFC 952 y a la RFC 1123 
'' 
'' ## Parametros ##
'' 
'' - sText As String: Cadena del tipo string la cual sera revisada y validada o no.
'' 
'' ## Retorno ##
'' 
'' - As Boolean: Valor boleano que representa la validez o no de la cadena
'' 
'' ## Autor ##
'' 
'' --------
'' ....Soplo....
'' -------
Public Function IsDominio(sText As String) As Boolean
  Dim ContadorGrupos As Integer, ContadorLetras As Integer, letra As String, Grupos As String[]
  Dim Valido As Boolean
  'el dominio puede ser un hostname o una ip. Para saberlo dividir en dominio en sus partes por puntos
  'el dominio puede formar parte de varios grupos de letras o números separados por punto
  
  valido = IsIP(sText) 'comprobar si el dominio es una ip valida
    
  If Not valido Then 'si no es una ip hay que comprobar si el dominio es válido
    Grupos = Split(sText, ".") 'separar los distintos grupos
      
    'revisar cada grupo obtenido
    For contadorGrupos = 0 To Grupos.Max        
    'el dominio puede contener letras a-z, 0-9, "-"
    'no pueden empezar por guion ni por punto
    
    'comprobar que no empieza por guión ni por punto
    If Left(grupos[ContadorGrupos], 1) = "." Or Left(grupos[ContadorGrupos], 1) = "-" Then 
      valido = False
    Else 
      For contadorletras = 1 To Len(grupos[contadorGrupos])
        letra = Mid(Grupos[contadorGrupos], contadorLetras, 1)
        
        'comprobar si es letra        
        valido = IIf(IsLetter(letra), True, False)        
        'comprobar si es numero
        If Not valido Then 
          valido = IIf(IsNumber(letra), True, False)
        Endif 
        
        'comprobar si es guion o punto
        If Not valido Then 
          valido = IIf(InStr("-.", letra) > 0, True, False)
        Endif         
        If Not valido Then 
          Break  'si hay algún caracter no válido no mirar mas
        Endif 
      Next 
      If Not valido Then 
        Break  'si hay algún caracter no válido no mirar mas
      Endif 
    Endif 
    If Not valido Then 
      Break  'si el grupo es inváido no mirar mas grupos
    Endif 
    Next 
  Endif 
Return valido
  
End

'' ## Descripcion ##
'' 
'' Funcion para determinar si una cadena es un direccion IP de internet valido
'' 
'' Debe ajustarce a las normas RFC 952 y a la RFC 1123 
'' 
'' ## Parametros ##
'' 
'' - sText As String: Cadena del tipo string la cual sera revisada y validada o no.
'' 
'' ## Retorno ##
'' 
'' - As Boolean: Valor boleano que representa la validez o no de la cadena
'' 
'' ## Autor ##
'' 
'' --------
'' ....Soplo....
'' -------
'' 
'' ## Comentarios ##
'' 
'' Para validar correctamente se debe verificar los octetos para ver el tipo de red que  indican
'' mas info en la siguiente direccion: http://es.tldp.org/Manuales-LuCAS/GARL2/garl2/x-087-2-issues.ip-addresses.html
Public Function IsIP(sText As String) As Boolean
  
  Dim partes As String[] = Split(sText, "."), Valido As Boolean, Contador As Integer
  Dim numero As Integer 
  If partes.count <> 4 Then 
    valido = False 'si no hay cuatro grupos de números no mirar mas
  Else 
    valido = True 
    'hay cuatro grupos de caracteres separados por puntos. Comprobar cada uno
    For contador = 0 To partes.Max
      If IsDigit(partes[contador]) Then 
        numero = CInt(partes[contador])
        valido = True
      Else 
        valido = False
      Endif 
      If valido Then 'si la parte está formada solo por numeros
        valido = IIf(valido And numero >= 0 And numero < 256, True, False)
        'el número debe ser positivo y menor que 256
      Endif 
      If Not valido Then 
        Break  'si un grupo de números no es válido no mirar mas
      Endif 
    Next 
  Endif 
  Return valido
  
End


' '' ## Descripcion ##
' '' 
' '' Verifica que el texto pasado sea un mail
' '' 
' '' ## Parametros ##
' '' 
' '' Cad: Es el texto a verificar.
' Public Function isMail(sText As String) As Boolean
' 
'   Dim lret As Boolean 
'    
'   lret = True
'   If InStr(cad, "@") = 0 Or InStr(Trim(cad), " ") > 0 Or InStr(cad, ".") = 0 Then
'     lret = False
'   Endif
'   Return lret
'   
' End


'******************************************************************************************************
'Codigo Privado
'******************************************************************************************************


'' ## Descripcion ##
'' 
'' Funcion para determinar si una cadena es un nombre valido segun las normas RFC 952 y a la RFC 1123 
'' 
'' ## Parametros ##
'' 
'' - sText As String: Cadena del tipo string la cual sera revisada y validada o no.
'' 
'' ## Retorno ##
'' 
'' - As Boolean: Valor boleano que representa la validez o no de la cadena
'' 
'' ## Autor ##
'' 
'' --------
'' ....Soplo....
'' -------
Private Function ComprobarUsuario(Usuario As String) As Boolean
Dim Contador As Integer, Letra As String, Valido As Boolean
  
  ' admite letras A-Z, a-z, 0-9, "! # $ % & ' * + - / = ? ^ _ ` { | } ~"
  ' no puede comenzar por punto ni haber dos puntos consecutivos  
  
  'comprobar que no empieza por punto
  valido = IIf(Left(usuario, 1) <> ".", True, False)
  
  'comprobar que no hay dos puntos consecutivos
  If valido Then 
    valido = IIf(InStr(usuario, "..") = 0, True, False)
  Endif 
  
  'recorrer las letras para verificarlas
  If valido Then 
    For Contador = 1 To Len(usuario)
      letra = Mid(usuario, contador, 1)
      'comprobar si es letra
      valido = IIf(IsLetter(letra), True, False)
      'comprobar si es numero
      If Not valido Then 
        valido = IIf(IsDigit(letra), True, False)
      Endif 
      'comprobar si la letra es uno de estos caracteres ! # $ % & ' * + - / = ? ^ _ ` { | } ~
      If Not valido Then 
        valido = IIf(InStr("!#$%&'*+-/=?^_`{|}~", letra) > 0, True, False)
      Endif 
      If Not valido Then 
        Break 'si no válido no mirar mas
      Endif
    Next 
  Endif 
  Return valido
End



