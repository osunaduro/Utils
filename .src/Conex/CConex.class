' Gambas class file

Export

'******************************************************************************************************
'Propiedades
'******************************************************************************************************

'' ## Descripcion ##
'' 
'' Tipo de Base de Datos MySQL o SQLite
'' 
'' Son de tiṕo String y estan declaradas en esta clase
'' 
'' - TIPO_DB_MySQL As String = "MySQL"
'' 
'' - TIPO_DB_SQLite As String = "SQLite"
Property Type As String 
Private sType As String ''variable de uso interno para la propiedad Type

'' ## Descripcion ##
'' 
'' Host de la Base de Datos
Property Host As String 
Private sHost As String ''variable de uso interno para la propiedad Host

'' ## Descripcion ##
'' 
'' Nombre del ususario.
Property Login As String
Private sLogin As String ''variable de uso interno para la propiedad Login

'' ## Descripcion ##
'' 
'' Puerto por defecto es 3306
Property Port As String 
Private sPort As String = "3306" ''variable de uso interno para la propiedad Puerto, por defecto 3306

'' ## Descripcion ##
'' 
'' Nombre de la Base de Datos
Property Name As String 
Private sName As String ''variable de uso interno para la propiedad Name

'' ## Descripcion ##
'' 
'' ''Contraseña de acceso
Property Password As String
Private sPassword As String ''variable de uso interno para la propiedad Password

'' ## Descripcion ##
'' 
'' Resultado de las consultas
Property Resultado As Result 
Private sResultado As Result ''variable de uso interno para la propiedad Resultado

'' ## Descripcion ##
'' 
'' Tabla a la cual acceder
Property Tabla As String 
Private sTabla As String ''variable de uso interno para la propiedad Tabla

'******************************************************************************************************
'Variables Privadas
'******************************************************************************************************

Private $Con As New Connection

'******************************************************************************************************
'Constantes
'******************************************************************************************************

Public Const TIPO_DB_MySQL As String = "MySQL"  'Para conectarce a MYSQL
Public Const TIPO_DB_SQLite As String = "SQLite"  'Para conectarce as SQLite

'' ## Descripcion ##
'' 
'' Cierra la coneccion
Public Procedure Close()
     
     $Con.Close
     
End

'' ## Descripcion ##
'' 
'' Funcion de conectar 
Public Procedure Connect() 

     ''Funcion de conctar

     $Con.Close()              ' Cierra la conexion
     $Con.Type = sType       ' Define el tipo de Conexion
     $Con.Host = sHost   ' Nombre del Servidor
     $Con.Login = sLogin       ' Usuario para la coenxion
     $Con.Port = sPort        ' Puerto usado para la conexion, usualmente: 3306
     $Con.Name = sName      ' Nombre de la base de datos a usar
     $Con.Password = sPassword ' Clave de Usuario
     $Con.Open()               ' Abrimos la conexion

End

'' ## Descripcion ##
'' 
'' Esta funcion solo realiza la llmada SQL que se le pasa por parametro
'' y el resultado es accesible en la propiedad Resultado de esta clase
Public Procedure Consulta($query As String) 
     
     sResultado = $Con.Exec($query)

End

'' ## Descripcion ##
'' 
'' Esta funcion busca en un campo una concidencia segun el patron.$Tabla
'' No esta pensada para realizar busquedas complejas, para realizar busquedas mas complejas
'' se debe buscar atra vez de la funciom Consulta que a esta se le envia un codigo SQL de consulta
'' en modo texto y no importa la complejidad de la busqueda pero siempre el resultado se almacena en
'' la propiedad Resultado
'' 
'' ## Parametros ##
'' 
'' - $campo As String
'' 
''      Nombre del campo sobre el cual se busca
''      
'' - $operador As String
'' 
''      Tipo de operador = > < o Like etc
''    
'' - $valor As Variant
'' 
''      Valor que se busca
''      
'' ## Retorno ##
'' 
'' -  As Boolean 
'' 
''      Si se encontraron o no valores o sea si es Aviable o no el Result
Public Procedure Busca($campo As String, $operador As String, $valor As Variant) As Boolean 
    
     Dim $query As String

     $query = "SELECT * FROM " & sTabla & " WHERE " & $campo & " " & $operador & " '" & $valor & "'"

     sResultado = $Con.Exec($query)

     If sResultado.Available Then
          Return True
     Else
          Return False
     Endif

End

'' ## Descripcion ##
'' 
'' Para que esta funcion funciones correctamente debe previamente estar seleccionado
'' en el parametro sResultado el campo a editar pues se trabaja sobre ese campo si 
'' existen mas de uno solo se editara el primero
'' 
'' ## Uso ##
'' 
'' Los correctos pasos para el trabajo seian
'' 
''  1_ Realizar una busqueda para tener el registro en la variable de propiedad sResultado
''  
''  2 _ Editar el campo con esta funcion
''  
''  ## Parametros ##
''  
''  - $campo Es el campo que se decea editar
''  
''  - $new_valor Es el valor que se le asignara
''  
''  - sCampoKey es la clave primaria de la tabla generalmente es ID... 
Public Procedure EditReg($campo As String, $new_valor As String, sCampoKey As String)      

    'sResultado = $Con.Edit(sTabla, "clave=&1", sResultado["clave"]
     sResultado = $Con.Edit(sTabla, "id=&1", sResultado[sCampoKey])
     sResultado[$campo] = $new_valor
     sResultado.Update

End

'' ## Descripcion ##
'' 
'' Esta funcion crea un nuevo reguistro en la tabla seleccionada en la propiedad sTabla de la clase
'' Es nesesario luego de rellenado de los parametros realizar un update sobre el sResultado que es
'' una varable del tipo Result.
'' 
'' ## Ejemplo ##
'' 
'' data.NewRegistro()
'' 
'' data.Resultado["clave"] = "nuevsdsdso"
'' 
'' data.Resultado["valor"] = " nuevsdo"
'' 
'' data.Resultado.Update
Public Procedure NewRegistro()

     sResultado = $Con.Create(sTabla)

End

'' ## Descripcion ##
'' 
'' Lista las tablas existente en la base de datos a la cual esta conectadas.
'' 
'' ## Retorno ##
'' 
'' Un Array de string con los nombres.
Public Function ListaTablas() As String[] 

     Dim $Tab As Table
     Dim $res As New String[]

     For Each $Tab In $Con.Tables
           $res.Add($Tab.Name)
     Next    
     
     Return $res
     
End

'' ## Descripcion ##
'' 
'' Devuelve una lista de los campos de la tabla seleccionada en la propiedad tabla de esta clase.
'' 
'' ## Retorno ##
'' 
'' Un Array de string con los nombres de los campos.
Public Function ListField() As String[] 
         
     Dim $contador As Integer
     Dim $res As New String[]
      
     For $contador = 0 To sResultado.Fields.Count - 1
          $res.Add(sResultado.Fields[$contador].Name)
     Next
     
     Return $res
     
End

'' ## Descripcion ##
'' 
'' Retorna la descripcion de la tabla (EXperimental aun)
'' 
'' Esta funcion retorna la descripcion de la tabla los field 
'' y los tipo de datoa y tamaños, todos esos datos.
'' 
'' Para acceder a los resultados se debe saber los nombres de los field que contienen el resut
'' que devuelve debere mejorar esto...
'' 
''  NOTE: seria bueno que devuelva un solo field con los datos de ese solo
''  
''  estos son los field del result
''  
''  Field     Type     Null     Key     Default     Extra
Public Function FiledDescrip($nomb As String) As Result 
     
     'esta funcion retorna la descripcion de la tabla los field 
     'y los tipo de datoa y tamaños, todos esos datos
     'para acceder a los resultados se debe saber los nombres de los field que contienen el resut 
     'que devuelve debere mejorar esto
     'NOTE: seria bueno que devuelva un solo field con los datos de ese solo
     
     'estos son los field del result
     'Field     Type     Null     Key     Default     Extra
     
  Dim $res As Result
  Dim $query As String
  
  $query = Subst("DESCRIBE  `&1`", sTabla)
 
  $res = $Con.Exec($query)
  
  For Each $res
       
       If $res["Field"] = $nomb Then
            
            Return $res
            
       Endif
       
  Next 
       
End

'' ## Descripcion ##
'' 
'' Lista las bases de datos de la coneccion actual.
'' 
'' ## Retorno ##
'' 
'' Un array con los nombres.
Public Procedure ListDB() As String[] 
     
     Dim $db As Database
     Dim $res As New String[]
     
     For Each $db In $Con.Databases
          $res.Add($db.Name)     
     Next
     
     Return $res
     
End

'******************************************************************************************************
'Procedimientos de Propiedades
'******************************************************************************************************
Private Function Type_Read() As String
     Return sType
End

Private Sub Type_Write(Value As String)
     sType = Value
End

Private Function Host_Read() As String
     Return sHost
End

Private Sub Host_Write(Value As String)
     sHost = Value
End

Private Function Login_Read() As String
     Return sLogin
End

Private Sub Login_Write(Value As String)
     sLogin = Value
End
Private Function Port_Read() As String
     Return sPort
End

Private Sub Port_Write(Value As String)
     sPort = Value
End

Private Function Name_Read() As String
     Return sName
End

Private Sub Name_Write(Value As String)
     sName = Value
End

Private Function Password_Read() As String
     Return sPassword
End

Private Sub Password_Write(Value As String)
     sPassword = Value
End

Private Function Resultado_Read() As Result
     Return sResultado
End

Private Sub Resultado_Write(Value As Result)
     sResultado = Value
End

Private Function Tabla_Read() As String
     Return sTabla
End

Private Sub Tabla_Write(Value As String)
     sTabla = Value
     sResultado = $Con.Exec("SELECT * FROM " & sTabla)
End